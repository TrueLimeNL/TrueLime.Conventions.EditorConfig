name: publish
on:
  push:
    branches: [ "main" ]

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  PACKAGE_DIRECTORY: ${{ github.workspace }}/nuget

defaults:
  run:
    shell: pwsh

jobs:
  create_nuget:
    runs-on: ubuntu-latest
    steps:
    - name: Setup workspace
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
    - name: Setup GitVersion
      uses: gittools/actions/gitversion/setup@v3.1.11
      with:
        versionSpec: '6.0.x'
    - name: Determine NuGet package version
      uses: gittools/actions/gitversion/execute@v3.1.11
    - name: Create NuGet package
      run: dotnet pack /p:ContinuousIntegrationBuild=true -p:Version=$GITVERSION_SEMVER --configuration Release --output ${{ env.PACKAGE_DIRECTORY }}
    - name: Publish NuGet package
      uses: actions/upload-artifact@v4
      with:
        name: nuget
        if-no-files-found: error
        retention-days: 7
        path: ${{ env.PACKAGE_DIRECTORY }}/*.nupkg

  validate_nuget:
    runs-on: ubuntu-latest
    needs: [ create_nuget ]
    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
      - name: Get NuGet package
        uses: actions/download-artifact@v3
        with:
          name: nuget
          path: ${{ env.PACKAGE_DIRECTORY }}
      - name: Install NuGet validator
        run: dotnet tool update Meziantou.Framework.NuGetPackageValidation.Tool --global
      # Validate metadata and content of the NuGet package
      # https://www.nuget.org/packages/Meziantou.Framework.NuGetPackageValidation.Tool#readme-body-tab
      - name: Validate package
        run: meziantou.validate-nuget-package (Get-ChildItem "${{ env.PACKAGE_DIRECTORY }}/*.nupkg")

  run_test:
    runs-on: ubuntu-latest
    steps:
    - name: Setup workspace
      uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
    - name: Run tests
      run: dotnet test --configuration Release

  deploy:
    # Publish only when creating a GitHub Release
    # https://docs.github.com/en/repositories/releasing-projects-on-github/managing-releases-in-a-repository
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: [ validate_nuget, run_test ]
    steps:
      - name: Get NuGet package
        uses: actions/download-artifact@v3
        with:
          name: nuget
          path: ${{ env.PACKAGE_DIRECTORY }}
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
      - name: Publish NuGet package
        run: |
          foreach($file in (Get-ChildItem "${{ env.PACKAGE_DIRECTORY }}" -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --api-key "${{ secrets.NUGET_APIKEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
          }
