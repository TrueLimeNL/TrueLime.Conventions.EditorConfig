name: Publish as NuGet package
on:
  release:
    types: [ published ]

env:
  PACKAGE_DIRECTORY: ${{ github.workspace }}/nuget
  NUGET_SOURCE: https://api.nuget.org/v3/index.json

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Restore dependencies
        run: dotnet restore
      - name: Build code
        run: dotnet build --configuration Release --no-restore
      - name: Test code
        run: dotnet test --configuration Release --no-build --verbosity normal
      - name: Setup GitVersion
        uses: gittools/actions/gitversion/setup@v3.1.11
      - name: Determine NuGet package version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3.1.11
      - name: Pack NuGet package
        run: dotnet pack /p:Version=${{ steps.gitversion.outputs.semVer }} --configuration Release --output ${{ env.PACKAGE_DIRECTORY }}
      - name: Upload NuGet package
        uses: actions/upload-artifact@v3
        with:
          name: nuget
          path: ${{ env.PACKAGE_DIRECTORY }}/*.nupkg
          retention-days: 7

  validate:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download NuGet package artifact
        uses: actions/download-artifact@v3
        with:
          name: nuget
          path: ${{ env.PACKAGE_DIRECTORY }}
      - name: Install NuGet validator
        run: dotnet tool update Meziantou.Framework.NuGetPackageValidation.Tool --global
      - name: Validate NuGet package
        run: meziantou.validate-nuget-package $(find ${{ env.PACKAGE_DIRECTORY }} -name "*.nupkg")

  publish:
    runs-on: ubuntu-latest
    needs: [build, validate]
    if: github.event_name == 'release'
    steps:
      - name: Download NuGet package artifact
        uses: actions/download-artifact@v3
        with:
          name: nuget
          path: ${{ env.PACKAGE_DIRECTORY }}
      - name: Publish to NuGet
        run: dotnet nuget push ${{ env.PACKAGE_DIRECTORY }}/*.nupkg --api-key ${{ secrets.NUGET_APIKEY }} --source ${{ env.NUGET_SOURCE }}